# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    # CI is triggered when commits enter these branches (on the GitHub remote server, not locally)
    branches: [ trunk ]
  pull_request:
    # CI is triggered when PRs are opened with these branches as targets
    branches: [ trunk ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    # checkout the code
    - uses: actions/checkout@v2

    # allow tests and other automated steps to interact with the rootski AWS account
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CI__AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CI__AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: install 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    # cache the python environment for faster dependency installation
    # it's important to use env.pythonLocation to get the current python version
    # not sure this is working yet
    - name: cache virtual environment
      uses: actions/cache@v2
      with:
        path: ~/usr/local/lib/python3.9/site-packages
        key: ${{ env.pythonLocation }}-${{ hashFiles('rootski_api/setup.py') }}

    # cache the python environment for faster dependency installation
    # it's important to use env.pythonLocation to get the current python version
    - name: cache root environment
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}

    # cache the python environment for faster pre-commit
    - name: cache pre-commit
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ~/.cache/pre-commit-${{ hashFiles('makefile') }}

    - name: install docker
      uses: docker-practice/actions-setup-docker@1.0.8

    - name: install dependencies
      run: |
        # install global python dependencies
        make install

        # install python dependencies specific to the backend code
        cd rootski_api
        make install

        # install docker-compose because it is needed to run the tests
        make install-docker-compose

    - name: checkout trunk and current branches
      run: |
        # these steps are necessary for darker to compare diffs properly
        # fetches all remote branches
        git fetch
        # creates a local branch of rootski remote default trunk branch
        git checkout -b trunk origin/trunk || echo "trunk already exists"
        # creates a local branch of the current running branch in pipeline
        git checkout -b ${GITHUB_HEAD_REF} origin/${GITHUB_HEAD_REF} || echo "${GITHUB_HEAD_REF} already exists"

    - name: run tests and other code quality checks
      run: |
        # check the code quality across the entire project (formatting, linting, static code checks)
        make check-code-quality-ci

        # run the backend tests
        cd rootski_api
        make full-test-ci

    # upload the test report generated by pytest to the codecov service
    - name: codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        # directory to search for coverage reports
        # directory: ./rootski_api/test-reports/
        name: rootski backend tests
